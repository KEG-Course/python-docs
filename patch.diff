diff --git a/docs/oj/api.md b/docs/oj/api.md
index 5d6e22d..06c4ad3 100644
--- a/docs/oj/api.md
+++ b/docs/oj/api.md
@@ -37,7 +37,7 @@
 
 ### 添加题目
 - 路径：`POST /api/problems/`
-- 权限：仅管理员
+- 权限：所有用户
 - 参数（JSON，参考 Step1 文档）：
   - `id` (str, 必填): 题目唯一标识
   - `title` (str, 必填): 题目标题
@@ -50,8 +50,8 @@
   - `hint` (str, 可选): 额外提示
   - `source` (str, 可选): 题目来源
   - `tags` (list, 可选): 题目标签
-  - `time_limit` (float, 可选): 时间限制（如 "1s"）
-  - `memory_limit` (int, 可选): 内存限制（如 "128MB"）
+  - `time_limit` (float, 可选): 时间限制，默认单位为 "s"
+  - `memory_limit` (int, 可选): 内存限制，默认单位为 "MB"
   - `author` (str, 可选): 题目作者
   - `difficulty` (str, 可选): 难度等级
 - 响应：
@@ -100,8 +100,8 @@
     "hint": "有负数哦！",
     "source": "洛谷",
     "tags": ["基础题"],
-    "time_limit": "1s",
-    "memory_limit": "128MB",
+    "time_limit": 1.0,
+    "memory_limit": 128,
     "author": "Luogu",
     "difficulty": "入门"
   }
@@ -109,6 +109,7 @@
 ```
 - 异常：404 题目不存在
 
+> 默认字段需要返回本类型默认值，比如 `str` 类需返回 `""`，`list` 类需返回 `[]`
 ---
 
 ## 2. 评测相关接口（Step 2 & 3）
@@ -138,7 +139,12 @@
 {
   "code": 200,
   "msg": "success",
-  "data": {"status": "Accepted", "score": 100, "time": 0.23, "memory": 128, "stderr": ""}
+  "data": {
+    "score": 10,
+    "counts": 30, // 总分数
+    "time": 1.01,
+    "memory": 130
+  }
 }
 ```
 - 异常：404 评测不存在 / 403 权限不足
@@ -174,8 +180,8 @@
   - `compile_cmd` (str, 可选): 编译命令
   - `run_cmd` (str, 必填): 运行命令
   - `source_template` (str, 可选): 代码执行模板
-  - `time_limit` (float, 可选): 默认时间限制（秒）
-  - `memory_limit` (int, 可选): 默认内存限制（MB）
+  - `time_limit` (float, 可选): 默认单位为 "s"
+  - `memory_limit` (int, 可选): 默认单位为 "MB"
 - 权限：仅管理员
 - 响应：
 ```json
@@ -225,7 +231,7 @@
 ```json
 {"code": 200, "msg": "login success", "data": {"user_id": 1, "username": "alice", "role": "user"}}
 ```
-- 异常：400 参数错误 / 401 用户名或密码错误
+- 异常：400 参数错误 / 401 用户名或密码错误 / 403 用户被禁用（Step 4）
 
 ### 用户登出
 - 路径：`POST /api/auth/logout`
@@ -279,11 +285,24 @@
 - 异常：404/403
 
 ### 用户列表查询
-- 路径：`GET /api/users/`，参数：`username`、`role`、`page`、`page_size`（可选）
+- 路径：`GET /api/users/`，参数：`page`、`page_size`（可选）
 - 权限：仅管理员
 - 响应：
 ```json
-{"code": 200, "msg": "success", "data": {"total": 2, "users": [{"user_id": 1, ...}]}}
+{
+  "code": 200, 
+  "msg": "success", 
+  "data": 
+  {
+    "total": 2, 
+    "users": 
+    [
+      {"user_id": 1, "join_time": "1924-08-17", "submit_count": 100, "resolve_count": 9},
+      {"user_id": 2, "join_time": "1911-04-05", "submit_count": 90, "resolve_count": 8},
+      {"user_id": 3, "join_time": "2012-07-14", "submit_count": 80, "resolve_count": 7},
+    ]
+  }
+}
 ```
 
 ---
@@ -295,7 +314,21 @@
 - 权限：仅本人或管理员
 - 响应：
 ```json
-{"code": 200, "msg": "success", "data": [{"test_id": 1, "status": "Accepted", "time": 0.23, "memory": 128}]}
+{
+  "code": 200, 
+  "msg": "success", 
+  "data": {
+    "status": [
+    {"id": 1, "result": "AC"},
+    {"id": 2, "result": "TLE"},
+    {"id": 3, "result": "MLE"},
+    ],
+    "score": 10,
+    "counts": 30, // 总分数
+    "time": 1.01,
+    "memory": 130
+  }
+}
 ```
 - 异常：404/403
 
diff --git a/docs/oj/faq.md b/docs/oj/faq.md
index f8b6b16..55e8f50 100644
--- a/docs/oj/faq.md
+++ b/docs/oj/faq.md
@@ -46,4 +46,6 @@
 
 ---
 
+> 感谢马子润、刘宇哲、陈晓宇、唐恒毅、刘汉唐、常钫铭等同学为文档提出的意见
+
 如有其他疑问，欢迎在课程群或私聊助教留言，助教会及时补充解答。
\ No newline at end of file
diff --git a/docs/oj/project/step1.md b/docs/oj/project/step1.md
index 7ad4a85..c04d05d 100644
--- a/docs/oj/project/step1.md
+++ b/docs/oj/project/step1.md
@@ -66,9 +66,9 @@
 3. **tags**  
    题目标签，便于分类检索（如"基础题"、"模拟"）。
 4. **time_limit**  
-   时间限制（如 1s），用于评测。
+   时间限制，默认单位为 "s"，用于评测。
 5. **memory_limit**  
-   内存限制（如 128MB），用于评测。
+   内存限制，默认单位为 "MB"，用于评测。
 6. **author**  
    题目作者。
 7. **difficulty**  
@@ -99,8 +99,8 @@
   "hint": "有负数哦！",
   "source": "洛谷",
   "tags": ["基础题"],
-  "time_limit": "1s",
-  "memory_limit": "128MB",
+  "time_limit": 1,
+  "memory_limit": 128,
   "author": "Luogu",
   "difficulty": "入门"
 }
diff --git a/docs/oj/project/step2.md b/docs/oj/project/step2.md
index 168b865..7c29ad5 100644
--- a/docs/oj/project/step2.md
+++ b/docs/oj/project/step2.md
@@ -92,11 +92,17 @@
    - 若用户代码超时或超内存，应立即终止进程，并返回对应的评测状态（TLE/MLE）。
 3. 评测结果
    - 评测接口的响应中，需包含实际用时、内存消耗，以及是否超限的状态。
+   - 可以认为一个测试点 10 分
+   - 由于每个测试点的状态不同，`status` 应该返回每个测试点的结果，包含 `id` 和 `result` 字段
    - 示例响应字段：
      ```json
      {
-       "status": "TLE",
-       "score": 0,
+       "status": [
+        {"id": 1, "result": "AC"},
+        {"id": 2, "result": "TLE"},
+        {"id": 3, "result": "MLE"},
+       ],
+       "score": 10,
        "time": 1.01,
        "memory": 130
      }
diff --git a/docs/oj/project/step4.md b/docs/oj/project/step4.md
index 12efc41..cebdcb0 100644
--- a/docs/oj/project/step4.md
+++ b/docs/oj/project/step4.md
@@ -22,7 +22,7 @@
 ### 任务分解
 
 #### 任务 0：用户登录/登出/初始管理员
-- 目标：实现用户登录、登出接口，系统启动时自动创建初始管理员账户（admin/admin）。
+- 目标：实现用户登录、登出接口，系统启动时自动创建初始管理员账户（账号为 admin / 密码为admin）。
 
 **Session 机制原理**
 
@@ -48,6 +48,12 @@ Session 是 Web 应用中维持用户状态的重要机制。由于 HTTP 协议
 
 Session 相比 JWT 的优势是可以立即失效（服务器端删除），劣势是需要服务器端存储。建议查阅相关框架的 Session 文档，理解具体实现细节。
 
+??? question "Session ID 生成"
+    Session ID 用来唯一标记某个用户的某次会话，并且需要被服务器端存储，
+    所以你需要保证拿到大规模不重复的 ID。
+
+    可以使用 `uuid` 库的 `uuid4` 函数，或者使用 SQL 等数据库默认的自增下标均可。
+
 **中间件机制**
 
 Web 框架通常使用中间件（Middleware）来处理 Session 管理。中间件是在请求处理过程中的拦截器，可以在请求到达路由处理函数之前或之后执行特定逻辑。
@@ -111,12 +117,37 @@ async def login(request: Request):
 5. 如果权限充足，返回用户信息（不包含密码）
 
 **返回数据：**
-- 用户ID、用户名、角色、注册时间等
-- 绝对不能返回密码相关信息
+
+```json
+{
+  "code": 200, 
+  "msg": "success", 
+  "data": 
+  {
+    "total": 2, 
+    "users": 
+    [
+      {"user_id": 1, "join_time": "1924-08-17", "submit_count": 100, "resolve_count": 9},
+      {"user_id": 2, "join_time": "1911-04-05", "submit_count": 90, "resolve_count": 8},
+      {"user_id": 3, "join_time": "2012-07-14", "submit_count": 80, "resolve_count": 7},
+    ]
+  }
+}
+```
+
+??? info "时间获取"
+    你可以使用如下命令获取 f'{year}-{month}-{day}' 格式的时间
+    ```python
+    from datetime import datetime
+    now = datetime.now()
+    date_str = now.strftime("%Y-%m-%d")
+    ```
 
 #### 任务 3：用户权限变更
 - 目标：管理员可变更用户权限（如设为 admin/banned）。
 
+如果用户被 ban，其再登录时会被阻止。
+
 **管理员权限检查**
 
 只有管理员可以修改用户权限，需要严格验证操作者身份。
@@ -129,18 +160,16 @@ async def login(request: Request):
 5. 记录操作日志（谁在什么时候修改了谁的权限）
 
 !!! danger "权限提示"
-    注意，在 step1 ~ step3 中，我们没有对题目上传 / 语言创建等进行权限控制。在添加用户权限后，我们需要更新之前的功能。为简化，我们规定为：题目上传 / 创建语言可以由任意用户执行，但是删除操作**仅管理员可执行**
+    注意，在 step1 ~ step3 中，我们没有对题目上传 / 语言创建等进行权限控制。在添加用户权限后，我们需要更新之前的功能。为简化，我们规定为：题目上传 / 创建语言可以由任意用户执行，但是删除操作**仅管理员可执行**。此外，你还需要修改之前的接口，在用户未登录时无法进行增删查改。
 
 #### 任务 4：用户列表查询
 - 目标：管理员可查询所有用户列表，支持分页、筛选。
 
 **分页与筛选**
 
-根据 API 文档，用户列表查询支持按用户名、角色筛选，以及分页参数。
+根据 API 文档，用户列表查询，支持分页参数。
 
 **API 参数：**
-- `username`（可选）：按用户名筛选
-- `role`（可选）：按角色筛选
 - `page`（可选）：页码
 - `page_size`（可选）：每页大小
 
